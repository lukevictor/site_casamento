var app = angular.module("app", ["ui.bootstrap", "ngAnimate", "ngSanitize", "timer", "angularMoment", "angularjs-dropdown-multiselect", "vcRecaptcha"]);
app.run(["amMoment", function(a) { a.changeLocale("pt-br") }]), app.config(["$httpProvider", "$logProvider", "$injector", function(a, b, c) { b.debugEnabled(!0), String.prototype.repeat || (console.log("Não encontrou o método repeat!"), String.prototype.repeat = function(a) { for (var b = "", c = 0; c < a; c++) b += this; return b }), Array.prototype.find || (console.log("Não encontrou o método find!"), Array.prototype.find = function(a) { for (var b = 0; b < this.length; b++)
            if (a(this[b], b)) return this[b];
        return null }), Array.prototype.findIndex || (console.log("Não encontrou o método findIndex!"), Array.prototype.findIndex = function(a) { var b = this.find(a); return b ? this.indexOf(b) : -1 }) }]), app.controller("FormularioPresencaController", ["$scope", "$log", "vcRecaptchaService", "formularioPresencaAPI", function(a, b, c, d) {
    function e() { return a.erros = {}, a.formulario.convidado && "" !== a.formulario.convidado.trim() || (a.erros.convidado = "Campo obrigatório"), a.formulario.convidado && (a.formulario.convidado.trim().length <= 3 || -1 === a.formulario.convidado.trim().indexOf(" ")) && (a.erros.convidado = "Insira o nome inteiro do convidado"), a.formulario.email && "" !== a.formulario.email.trim() || (a.erros.email = "Formato inválido"), a.formulario.comparecimento || (a.erros.comparecimento = "<i class='fas fa-times fa-fw'></i>Selecione uma op&ccedil;&atilde;o"), angular.equals(a.erros, {}) }
    a.response = null, a.widgetId = null, a.recaptcha = { key: "6LfE1vgUAAAAAHfL1b8ZvYy4YgCgtbz6cZqE0jnO", response: null, widgetId: null }, a.loading = !1, a.exibirMensagemSucesso = !1, a.exibirMensagemErro = !1, a.ordemAcompanhante = 0, a.erros = {}, a.formulario = { convidado: null, email: null, comparecimento: null, acompanhantes: [] }, a.init = function() {}, a.adicionarAcompanhante = function() { a.formulario.acompanhantes.push({ nome: null, ordem: a.ordemAcompanhante++ }) }, a.removerAcompanhante = function(b) { a.formulario.acompanhantes.splice(a.formulario.acompanhantes.indexOf(b), 1) }, a.setResponse = function(b) { a.recaptcha.response = b, a.enviar() }, a.setWidgetId = function(b) { a.recaptcha.widgetId = b }, a.cbExpiration = function() { c.reload(a.widgetId), a.recaptcha.response = null }, a.enviar = function() { b.debug("Enviado formulario."), e() && (a.loading = !0, d.enviarConfirmacao(a.formulario, a.recaptcha.response).then(function() { a.exibirMensagemSucesso = !0, a.exibirMensagemErro = !1 }, function() { a.exibirMensagemSucesso = !1, a.exibirMensagemErro = !0 }).finally(function() { a.loading = !1 }, angular.noop)) } }]), app.controller("LandingController", ["$scope", "$log", "$timeout", "moment", function(a, b, c, d) { a.dataAtual = d(), a.dataCasamento = d("2020-09-12 19:45"), a.animarConjuge = !1, a.animarSubtitulo = !1, a.animarCountdown = !1, a.init = function() { c(function() { a.animarConjuge = !0 }, 500), c(function() { a.animarSubtitulo = !0 }, 1e3), c(function() { a.animarCountdown = !0 }, 1500) } }]), app.controller("NoivosController", ["$scope", "$log", function(a, b) { a.galeria = [{ src: "../assets/images/opt/ensaio/C_F_PreWedding-0020.jpg", largo: !0 }, { src: "../assets/images/opt/ensaio/C_F_PreWedding-0032.jpg" }, { src: "../assets/images/opt/ensaio/C_F_PreWedding-0035.jpg" }, { src: "../assets/images/opt/ensaio/C_F_PreWedding-0043.jpg" }, { src: "../assets/images/opt/ensaio/C_F_PreWedding-0044.jpg" }, { src: "../assets/images/opt/ensaio/C_F_PreWedding-0062.jpg" }, { src: "../assets/images/opt/ensaio/C_F_PreWedding-0092.jpg", largo: !0 }], a.init = function() {} }]), app.controller("PadrinhosController", ["$scope", "$log", function(a, b) { a.casais = [{ padrinho: { nome: "Daniel", foto: "Daniel.jpg" }, madrinha: { nome: "Salete", foto: "Salete.jpg" } }, { padrinho: { nome: "Douglas", foto: "Douglas.jpg" }, madrinha: { nome: "Thayná", foto: "Thayná.jpg" } }, { padrinho: { nome: "Luciano", foto: "Luciano.jpg" }, madrinha: { nome: "Sheila", foto: "Sheila.jpg" } }, { padrinho: { nome: "Ricardo", foto: "Ricardo.jpg" }, madrinha: { nome: "Jéssica", foto: "Jéssica.jpg" } }, { padrinho: { nome: "Toninho", foto: "Toninho.jpg" }, madrinha: { nome: "Zélia", foto: "Zélia.jpg" } }, { padrinho: { nome: "Diogo", foto: "Diogo.jpg" }, madrinha: { nome: "Driele", foto: "Driele.jpg" } }, { padrinho: { nome: "Bruno", foto: "Bruno.jpg" }, madrinha: { nome: "Aline", foto: "Aline.jpg" } }, { padrinho: { nome: "Ivan", foto: "Ivan.jpg" }, madrinha: { nome: "Thais", foto: "Thais.jpg" } }, { padrinho: { nome: "Felipe", foto: "Felipe.jpg" }, madrinha: { nome: "Camila", foto: "Camila.jpg" } }, { padrinho: { nome: "Cleyton", foto: "Cleyton.jpg" }, madrinha: { nome: "Ana", foto: "Ana.jpg" } }], a.init = function() { c(a.casais) }; var c = function(a) { for (var b, c, d = a.length; d;) c = Math.floor(Math.random() * d--), b = a[d], a[d] = a[c], a[c] = b; return a } }]), app.directive("fotoGaleria", function() { return t = "<div class=\"col-sm-12 col-xs-12 gal-item\" ng-class=\"item.largo ? 'col-md-8' : 'col-md-4' \">", t += '    <div class="box">', t += '        <a href="#" data-toggle="modal" data-target="{{\'#\'+index}}">', t += '            <img src="{{item.src}}">', t += "        </a>", t += '        <div class="modal fade" id="{{index}}" tabindex="-1" role="dialog">', t += '            <div class="modal-dialog" role="document">', t += '                <div class="modal-content">', t += '                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">', t += '                        <span aria-hidden="true">×</span>', t += "                    </button>", t += '                    <div class="modal-body">', t += '                        <img src="{{item.src}}">', t += "                    </div>", t += '                    <div ng-if="item.descricao" class="col-md-12 description">', t += "                        <h4>{{item.descricao}}</h4>", t += "                   </div>", t += "                </div>", t += "            </div>", t += "        </div>", t += "    </div>", t += "</div>", { restrict: "AE", scope: { item: "=", index: "@" }, replace: !0, template: t } }), app.factory("formularioPresencaAPI", ["$http", "$log", function(a, b) { return { enviarConfirmacao: function(c, d) { return b.debug("Invocando o envio de confirmacao."), a.post("confirmar.php", { formulario: c, recaptcha: d }) } } }]), app.factory("mensagensAPI", function() { var a = function(c, d) { if (!/Mensagens\.\S+/.test(c.trim())) return c; var e = b(c); return e ? d ? (d.forEach(function(a, b) { e = e.replace(new RegExp("\\$\\{" + b + "\\}", "g"), a) }), e) : e : a("Mensagens.geral.erro.INTERNO_CLIENTE", ['Mensagem com chave: <b>"' + c + '"</b> inexistente.']) },
        b = function(a) { var b = a.split("."),
                c = Mensagens; for (i = 1; i < b.length; i++) c = c[b[i]]; return c }; return { montarMensagemParaExibicao: a } }), app.factory("modalAPI", ["$uibModal", "$log", "$interval", "MODAL", "mensagensAPI", function(a, b, c, d, e) { var f = "DefaultModalController",
        g = function(b, c, d, e, g, h, i) { c = c || f, d = d || function(a) {}, e = e || function(a) {}, i = i || function(a) {}, h = h || {}; var j = void 0 === h.animation || null === h.animation || "boolean" != typeof h.animation || h.animation,
                k = a.open({ templateUrl: b, controller: c, backdrop: "static", size: g, animation: j, resolve: { param: function() { return h } } }); return k.result.then(d, e), k.rendered.then(i), k },
        h = function(a, b, c, e) { var h = { titulo: "Confirmar", tipoMensagem: d.CONFIRMAR, mensagem: Mensagens.geral.confirmacao.ACAO }; return g("formularios/tpl_modal_confirmar.html", f, a, b, c, n(h, e)) },
        i = function(a, b, c, e) { c = c || "sm"; var h = { titulo: "Remover registro?", tipoMensagem: d.REMOVER, mensagem: Mensagens.geral.confirmacao.EXCLUSAO }; return g("formularios/tpl_modal_remover.html", f, a, b, c, n(h, e)) },
        j = function(a, b, c, e) { var h = { titulo: "Ocorreu um erro", tipoMensagem: d.ERRO, mensagem: Mensagens.geral.erro.PROCESSAMENTO_REQUISICAO }; return g("formularios/tpl_modal_erro_alerta.html", f, a, b, c, n(h, e)) },
        k = function(a, b, c, e) { var h = { titulo: "Aten&ccedil;&atilde;o", tipoMensagem: d.ALERTA, mensagem: "" }; return g("formularios/tpl_modal_erro_alerta.html", f, a, b, c, n(h, e)) },
        l = function(a, b, c, e) { var h = { titulo: "Sucesso", tipoMensagem: d.SUCESSO, mensagem: Mensagens.geral.sucesso.PROCESSAMENTO }; return g("formularios/tpl_modal_sucesso.html", f, a, b, c, n(h, e)) },
        m = function(a, b, c, e) { var h = { titulo: "Aviso de Redirecionamento", tipoMensagem: d.REDIRECIONAR, mensagem: Mensagens.geral.sucesso.REDIRECIONAMENTO }; return g("formularios/tpl_modal_redirecionamento.html", f, a, b, c, n(h, e)) },
        n = function(a, b) { if (b && "object" == typeof b) { var c = angular.copy(b);
                o(c); for (var d in a) void 0 === c[d] && (c[d] = a[d]); return c } return a },
        o = function(a) { a.mensagem && (a.mensagem = e.montarMensagemParaExibicao(a.mensagem, a.parametros)) }; return { criarModalPersonalizado: g, criarModalConfirmar: h, criarModalRemocao: i, criarModalErro: j, criarModalAlerta: k, criarModalSucesso: l, criarModalRedirecionamento: m } }]), app.factory("modalCarregamentoAPI", ["$q", "$http", "$uibModal", "$log", "$interval", "MODAL", function(a, b, c, d, e, f) { var g; return { criarModalCarregamento: function() { d.debug("Abrindo modal de carregamento"), g = c.open({ templateUrl: "formularios/tpl_modal_loading.html", controller: "DefaultModalController", backdrop: "static", size: "sm", animation: !1, resolve: { param: function() { return {} } } }) }, fecharModalCarregamento: function() { d.debug("Fechando modal de carregamento"), g ? a.all([g.opened, g.rendered]).then(function(a) { d.debug("Realizando fechamento do modal de carregamento"), g.close() }, function(a) { d.error(a) }).finally(function() { d.debug("Resetando 'modalCarregamento' para undefined"), g = void 0 }, angular.noop) : d.error("Nao e possivel fechar o modal de carregamento pois ele nao esta aberto.") } } }]), app.factory("urlAPI", function() { return { recuperarValorDoParametroNomeado: function(a) { for (var b = window.location.search.split(/[\?|\&|\=]/), c = 0; c < b.length && b[c] !== a;) c++; return b && b.length > c + 1 ? b[c + 1] : null }, recuperarValorParametroPosicional: function(a) { var b = window.location.pathname.split(/\//); return b.length < a ? null : b.filter(function(c, d) { return d >= b.length - a }) } } }), app.factory("utilAPI", ["$http", "$filter", "$log", function(a, b, c) { var d = this; return d._listarEstados = function() { return a.get("util/estados") }, d._recuperarEstado = function(b) { return a.get("util/estado/" + b) }, d._listarEstruturaOrganizacionalTree = function() { return a.get("util/hierarquiaAreasTree/") }, d._recuperarObjetoDeErros = function(a) { var b = {}; if (a && a.data && a.data.objetos && a.data.objetos.erros) { var c = a.data.objetos.erros; for (var d in c) b[c[d].field] = c[d].msg } return b }, d._onbeforeunload = function(a, b) { return function(a) { if (b()) { var c = "Tem certeza que deseja abandonar a pagina sem gravar os dados? "; return void 0 === a && (a = window.event), a && (a.returnValue = c), c } } }, d._montarArea = function(a, c) { var e = b("filter")(c, { id: a })[0]; return d.buscarAreaParent(e.parent, c) + e.text }, d.buscarAreaParent = function(a, c) { if ("#" === a) return ""; var e = b("filter")(c, { id: a })[0]; return d.buscarAreaParent(e.parent, c) + e.sigla + " / " }, d._isSubAreaOf = function(a, c, d) { if (a === c) return !1; for (; a && "#" !== a;) { var e = b("filter")(d, { id: a })[0]; if (e.parent === c) return !0;
            a = e.parent } return !1 }, { listarEstados: d._listarEstados, recuperarEstado: d._recuperarEstado, listarEstruturaOrganizacionalTree: d._listarEstruturaOrganizacionalTree, recuperarObjetoDeErros: d._recuperarObjetoDeErros, onbeforeunload: d._onbeforeunload, montarArea: d._montarArea, isSubAreaOf: d._isSubAreaOf } }]);